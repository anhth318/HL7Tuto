package com.tran.synchronizedhl7server.localmultithreadedserver;

import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.ReentrantLock;

import ca.uhn.hl7v2.model.DataTypeException;
import ca.uhn.hl7v2.model.v24.segment.MSH;

public class HL7ResourceExploiterWithLock extends HL7ResourceExploiter{
	private ReentrantLock lock;
	
	public HL7ResourceExploiterWithLock() {
		// TODO Auto-generated constructor stub
		super();
		lock = new ReentrantLock();
	}
	
	public void increase(){
		
		try {
			try {
				if(lock.tryLock(10, TimeUnit.SECONDS)){
					MSH mshSegment = this.getMsg().getMSH();
					int n = Integer.parseInt(mshSegment.getMessageControlID().toString());
					n = n + 1;
					mshSegment.getMessageControlID().setValue(Integer.toString(n));
				}
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} finally{
				lock.unlock();
			}
		} catch (DataTypeException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}
}
